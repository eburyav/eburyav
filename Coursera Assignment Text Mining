import pandas as pd
import re
from calendar import month_name


doc = []
with open('dates.txt') as file:
    for line in file:
        doc.append(line)

df = pd.Series(doc)

pd.set_option("display.max_rows", None, "display.max_columns", None)

# you will have to define the below section as a function as prompted in assignment. 

df = pd.DataFrame(doc, columns=['text'])
df['text'] = df['text'].apply(lambda x: x.strip('\n'))
pattern = "[,.]? \d{4}|".join(month_name[1:]) + "[,.]? \d{4}"
df['date'] = df['text'].apply(lambda x:re.findall(r'\d{1,2}\/\d{1,2}\/\d{2,4}|\d{1,2}\-\d{1,2}\-\d{2,4}|[A-Z][a-z]+\-\d{1,2}\-\d{4}|[A-Z][a-z]+[,.]? \d{2}[a-z]*,? \d{4}|\d{1,2} [A-Z][a-z,.]+ \d{4}|[A-Z][a-z]{2}[,.]? \d{4}|'+pattern+r'|\d{1,2}\/\d{4}|\d{4}',x))
df['date'][271] = [df['date'][271][1]]
df['date'] = df['date'].apply(lambda x: x[0])
df['date'][461] = re.findall(r'\d{4}',df['date'][461])[0]
df['date'][465] = re.findall(r'\d{4}',df['date'][465])[0]

date_list = list(df['date'])

date_list2=[re.split('/|-|\s',i) for i in date_list]

date_list3=date_list2

date_list3=date_list2


#converting all 4 digit years into 2 digits
for i in range(0,len(date_list2)):
    try: 
        if int(date_list2[i][2]) >  100:
            date_list3[i][0] = date_list2[i][0]
            date_list3[i][1] = date_list2[i][1]
            date_list3[i][2] = date_list2[i][2][-2:]
    except:
        pass

#renaming the columns to avoid confusion
dfdate = pd.DataFrame(date_list3,columns=["M","D","Y"])

#if there is a monthname text in day column, take it and convert it to month number and put it into correct position:
for i in range(0,len(dfdate)):

    try:
        if(re.match(r'Jan*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="1" 
        elif(re.match(r'Feb*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="2"
        elif(re.match(r'Mar*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="3"
        elif(re.match(r'Apr*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="4"
        elif(re.match(r'May*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="5"
        elif(re.match(r'Jun*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="6"
        elif(re.match(r'Jul*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="7"
        elif(re.match(r'Aug*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="8"
        elif(re.match(r'Sep*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="9"
        elif(re.match(r'Oct*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="10"
        elif(re.match(r'Nov*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="11"
        elif(re.match(r'Dec*',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["M"][i]
            dfdate["M"][i]="12"
    except: 
        pass

#There are some text Monthnames in Month column, convert it into digits    
for i in range(0,len(dfdate)):

    
    if(re.match(r'Jan*',dfdate["M"][i])):
        dfdate["M"][i]="1" 
    elif(re.match(r'Feb*',dfdate["M"][i])):
        dfdate["M"][i]="2"
    elif(re.match(r'Mar*',dfdate["M"][i])):
        dfdate["M"][i]="3"
    elif(re.match(r'Apr*',dfdate["M"][i])):
        dfdate["M"][i]="4"
    elif(re.match(r'May*',dfdate["M"][i])):
        dfdate["M"][i]="5"
    elif(re.match(r'Jun*',dfdate["M"][i])):
        dfdate["M"][i]="6"
    elif(re.match(r'Jul*',dfdate["M"][i])):
        dfdate["M"][i]="7"
    elif(re.match(r'Aug*',dfdate["M"][i])):
        dfdate["M"][i]="8"
    elif(re.match(r'Sep*',dfdate["M"][i])):
        dfdate["M"][i]="9"
    elif(re.match(r'Oct*',dfdate["M"][i])):
        dfdate["M"][i]="10"
    elif(re.match(r'Nov*',dfdate["M"][i])):
        dfdate["M"][i]="11"
    elif(re.match(r'Dec*',dfdate["M"][i])):
        dfdate["M"][i]="12"

#If there is "," in the end of day digits, remove it:
for i in range(0,len(dfdate)):
    try: 
        if(re.match(r'\d\d?,',dfdate["D"][i])):
            dfdate["D"][i]=dfdate["D"][i][:-1]
    except:
        pass

dfdate2=dfdate

#If month and year colums are both None, put the year data inside Month column into Year column and set month and day as "1"
for i in range(0,len(dfdate2)):
    if dfdate2["Y"][i]==None and dfdate2["D"][i]==None :
        dfdate2["Y"][i]=dfdate2["M"][i]
        dfdate2["D"][i]="1"
        dfdate2["M"][i]="1"
#If the year column is None but we have the year date in day column then put it into correct place and set day data as 1. Month data is ccorrect leave it as it is.
for i in range(0,len(dfdate2)):
    if dfdate2["Y"][i]==None:
        dfdate2["Y"][i]=dfdate2["D"][i]
        #dfdate2["D"]="1"
        #dfdate2["Y"][i]=dfdate2["Y"][i][-2:]
#at this point we have some columns where we have copied year data into it's column but left the same date in day's column as it is. now let's find them and fix them.         
for i in range(0,len(dfdate2)):
    if dfdate2["Y"][i]==dfdate2["Y"][i] and len(dfdate2["Y"][i])==4:
        dfdate2["D"][i]="1"
        
#remove all 4 digits year data once more       
for i in range(0,len(dfdate2)):
    try: 
        if int(dfdate2["Y"][i]) >  99:
            dfdate2["Y"][i] = dfdate2["Y"][i][-2:]
    except:
        pass

#merge all month/day/year data into a new data frame column named "date_column"
dfdate2['date_column'] = dfdate2.apply(lambda row: row.M +"/"+ row.D+"/" + row.Y, axis=1)   

#take the original index data as a column before sorting.
dfdate2['index1'] = dfdate2.index

#adjust the date data into a sortable format
dfdate2['date_column'] =pd.to_datetime(dfdate2.date_column)

#sort it
dfdate4=dfdate2.sort_values(by=['date_column'])

make it a list of only the index column of sorted data
latest_list = list(dfdate4['index1'])

#This is important! Return the data back as PANDAS SERIES! not as a dataframe!
df_final = pd.Series(latest_list)
